diff --git app-catalog/src/index.tsx app-catalog/src/index.tsx
index ca3c1e7..e8f4369 100644
--- app-catalog/src/index.tsx
+++ app-catalog/src/index.tsx
@@ -1,8 +1,15 @@
 import { registerRoute, registerSidebarEntry } from '@kinvolk/headlamp-plugin/lib';
+import {
+  ARTIFACTHUB_PROTOCOL,
+  CommunityChartList,
+  HELM_PROTOCOL,
+  HelmChartList,
+} from './api/catalogs';
 import ChartDetails from './components/charts/Details';
 import { ChartsList } from './components/charts/List';
 import ReleaseDetail from './components/releases/Detail';
 import ReleaseList from './components/releases/List';
+import { CatalogLists } from './helpers/catalog';
 
 export function isElectron(): boolean {
   // Renderer process
@@ -43,7 +50,6 @@ if (isElectron()) {
     parent: '',
     label: 'Apps',
   });
-
   registerSidebarEntry({
     name: 'Charts',
     url: '/apps/catalog',
@@ -51,7 +57,6 @@ if (isElectron()) {
     parent: 'Helm',
     label: 'Catalog',
   });
-
   registerSidebarEntry({
     name: 'Releases',
     url: '/apps/installed',
@@ -59,23 +64,80 @@ if (isElectron()) {
     parent: 'Helm',
     label: 'Installed',
   });
+} else {
+  // Iterate the list of c, to register the sidebar and the respective routes
+  CatalogLists().then(chart => {
+    for (let i = 0; i < chart.length; i++) {
+      // Register the sidebar for Apps, with the URL pointing to the first chart returned
+      if (i === 0) {
+        registerSidebarEntry({
+          name: 'Helm',
+          url: '/apps/' + chart[i].name,
+          icon: 'mdi:apps-box',
+          parent: '',
+          label: 'Apps',
+        });
+      }
 
-  registerRoute({
-    path: '/apps/installed',
-    sidebar: 'Releases',
-    name: 'Releases',
-    exact: true,
-    component: () => <ReleaseList />,
-  });
+      // Register the sidebars for the catalogs, as returned by the API
+      registerSidebarEntry({
+        name: 'Charts ' + chart[i].name,
+        url: '/apps/' + chart[i].name,
+        icon: '',
+        parent: 'Helm',
+        label: chart[i].displayName,
+      });
 
-  registerRoute({
-    path: '/helm/:namespace/releases/:releaseName',
-    sidebar: 'Releases',
-    name: 'Release Detail',
-    exact: true,
-    component: () => <ReleaseDetail />,
+      // Register the sidebar with label - Installed, as the last entry under Apps
+      if (i === chart.length - 1) {
+        registerSidebarEntry({
+          name: 'Releases',
+          url: '/apps/installed',
+          icon: '',
+          parent: 'Helm',
+          label: 'Installed',
+        });
+      }
+
+      if (chart[i].protocol === HELM_PROTOCOL) {
+        registerRoute({
+          path: '/apps/' + chart[i].name,
+          sidebar: 'Charts ' + chart[i].name,
+          name: 'Charts ' + chart[i].name,
+          exact: true,
+          component: () => HelmChartList(chart[i].metadataName, chart[i].namespace, chart[i].uri),
+        });
+      } else if (chart[i].protocol === ARTIFACTHUB_PROTOCOL) {
+        registerRoute({
+          path: '/apps/' + chart[i].name,
+          sidebar: 'Charts ' + chart[i].name,
+          name: 'Charts ' + chart[i].name,
+          exact: true,
+          component: () =>
+            CommunityChartList(chart[i].metadataName, chart[i].namespace, chart[i].uri),
+        });
+      }
+    }
   });
+}
 
+registerRoute({
+  path: '/apps/installed',
+  sidebar: 'Releases',
+  name: 'Releases',
+  exact: true,
+  component: () => <ReleaseList />,
+});
+
+registerRoute({
+  path: '/helm/:namespace/releases/:releaseName',
+  sidebar: 'Releases',
+  name: 'Release Detail',
+  exact: true,
+  component: () => <ReleaseDetail />,
+});
+
+if (isElectron()) {
   registerRoute({
     path: '/apps/catalog',
     sidebar: 'Charts',
@@ -83,12 +145,12 @@ if (isElectron()) {
     exact: true,
     component: () => <ChartsList />,
   });
-
-  registerRoute({
-    path: '/helm/:repoName/charts/:chartName',
-    sidebar: 'Charts',
-    name: 'Charts',
-    exact: true,
-    component: () => <ChartDetails />,
-  });
 }
+
+registerRoute({
+  path: '/helm/:repoName/charts/:chartName',
+  sidebar: 'Charts',
+  name: 'Charts',
+  exact: true,
+  component: () => <ChartDetails />,
+});
